"Get a user record"
type User {
  "User ID"
  _id: ID

  "User alias"
  alias: String

  "User first name"
  givenName: String

  "User's lastname"
  surName: String
  
  "User display name"
  displayName: String

  "User email"
  email: String

  "User API access list"
  apiAccess: String
}

"Get List of users"
type Users {
  "Total number of user records"
  totalItems: Int!

  "Number of user records per page"
  pageSize: Int!

  "Current page number"
  pageNumber: Int!

  "Total number of pages retrieved"
  totalPages: Int!

  "Current page has a previous page"
  hasPreviousPage: Boolean!

  "Current page has a next page"
  hasNextPage: Boolean!

  "List of all users"
  data: [User!]!
}

type VerifiedUserData {
  "User assigned id string e.g. 583dc006e74a1d205f4e1403"
  id: String!
  "User display name"
  username: String!
}

type VerifyUser {
  "Partial verified user information"
  user: VerifiedUserData!
  "Validates user authentication status"
  isAuth: Boolean!
  "Verified user session token"
  token: String!
}