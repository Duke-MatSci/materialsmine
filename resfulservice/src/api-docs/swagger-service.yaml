openapi: 3.0.0
info:
  title: MaterialsMine Project API Docs
  description: As MaterialsMine continues to expand, we are committed to facilitating materials research development and
    welcome feedback and suggestions for further improvements to help you benchmark and visualize your data, explore your 
    research hypotheses, perform simulations and analysis using our available tools, and more.
  version: 1.0.0
  termsOfService:
  contact:
    name:
    email:
servers:
  
paths:
  /admin/es:
    get:
      security:
        - BearerAuth: [] 
      summary: Check the status of elastic search service
      tags:
        - Admin
      responses:
        '200':
          description: Returns true if ES service is up or false if ES service is down
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: boolean
                    example: true
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '403':
          description: If user is forbidden from using the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden-Error'
        '500':
          description: Elastic search upstream server response error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    post:
      security:
        - BearerAuth: [] 
      summary: Automatically configures & initializes elastic search service
      tags:
        - Admin
      responses:
        '200':
          description: Returns a successfully configure message
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: Successfully configured schemas!
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '403':
          description: If user is forbidden from using the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden-Error'
        '500':
          description: Elastic search upstream server response error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    put:
      tags:
        - Admin
      security:
        - BearerAuth: [] 
      summary: Add new resource into search service. Examples of a resource item are charts, samples or articles
      requestBody:
        description: New resource document payload to index in json
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [samples, charts, articles]
                doc:
                  type: object
                  properties:
                    label:
                      type: string
                      example: Glass Transition Temperature
                    identifier:
                      type: string
                      example: http://matmine.org/sample/l333-s5-salami-1000
                    thumbnail:
                      type: string
                      example: https://localhost/explorer/blob?=1441449bdf0cb480
                    description:
                      type: string
                      example: This chart of curated articles per year published is compact...
      responses:
        '200':
          description: Returns an object similar to the example below if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      _index:
                        type: string
                        example: samples
                      _type:
                        type: string
                        example: _doc
                      _id:
                        type: string
                        example: VeMK7LYgBMY-vG6TxJk_N
                      _version:
                        type: number
                        example: 2
                      _shards:
                        type: object
                        properties:
                          total: 
                            type: number
                            example: 1000000
                          successful: 
                            type: number
                            example: 1
                          failed: 
                            type: number
                            example: 0
                      _seq_no:
                        type: number
                        example: 99999
                      _primary_term:
                        type: number
                        example: 36

        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '422':
          description: Missing required input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Missing-Input-Error'
        '500':
          description: Elastic search upstream server response error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    delete:
      security:
        - BearerAuth: [] 
      summary: Removes resource item from search service. Examples of a resource item are charts, samples or articles
      tags:
        - Admin
      requestBody:
        description: Details of resource document to remove from search service
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [samples, charts, articles]
                doc:
                  type: string
                  example: http://matmine.org/sample/l333-s5-salami-1000
      responses:
        '200':
          description: Returns an object response if deletion is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      took:
                        type: number
                        example: 36
                      timed_out:
                        type: string
                        example: false
                      total:
                        type: number
                        example: 2
                      deleted:
                        type: number
                        example: 2
                      batches:
                        type: number
                        example: 1
                      version_conflicts:
                        type: number
                        example: 0
                      noops:
                        type: number
                        example: 0
                      retries:
                        type: object
                        properties:
                          bulk: 
                            type: number
                            example: 0
                          search: 
                            type: number
                            example: 0
                      throttled_millis:
                        type: number
                        example: 0
                      requests_per_second:
                        type: number
                        example: -1
                      throttled_until_millis:
                        type: number
                        example: 0
                      failures:
                        type: array
                        example: []

        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '422':
          description: Missing required input
          content:
            application/json:

              schema:
                $ref: '#/components/schemas/Missing-Input-Error'
        '403':
          description: If user is forbidden from using the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden-Error'
        '500':
          description: Elastic search upstream server response error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
  /curate:
    get:
      security:
        - BearerAuth: []
      summary: Gets curation Base Object
      description: A route to get the Curation Schema Base Object either base on sheetName query or returns the whole Schema
      tags:
        - Curation
      parameters:
        - in: query
          name: sheetName
          schema:
            type: string
          description: The sheetName (i.e subset) of the Schema to return. This is optional
      responses:
        '200':
          description: Returns a json Schema object
          content:
            application/json:
              schema:
                type: object
                example: 
                  data origin: {}
                  material types: {}
                  synthesis and processing: {}
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    post:
      security:
        - BearerAuth: [] 
      summary: Creates a new curation
      description: Curates a new data based on a submitted spreadsheet & other files
      tags:
        - Curation
      parameters:
        - in: query
          name: dataset
          schema:
            type: string
          description: Dataset ID
      requestBody:
        description: A payload that contains the master_template xlsx file along with other files needed to create the curation
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uploadfile:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Returns the newly curated object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Successful-Curation'

        '400':
          description: If user doesn't upload master template xlsx file
          content:
            application/json:
              schema:
                type: object
                properties:
                      message:
                        type: string
                        enum: ['Missing dataset ID in query', 'Material template files not uploaded', 'Master template xlsx file not uploaded']

        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '403':
          description: If user is forbidden from using the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden-Error'
        '404':
          description: Dataset not found
          content: 
            application/json: 
              schema:
                type: object
                example:
                  message: A sample must belong to a dataset. Dataset 583e3d6ae74a1d205f4e3fd3 not found
        '409':
          description: conflict error if object already curated
          content:
            application/json:
              schema:
                type: object
                example:
                    message: 'This had been curated already'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    put:
      tags:
        - Curation
      security:
        - BearerAuth: [] 
      summary: Updates existing curated data
      deprecated: false
      parameters:
        - in: query
          name: xlsxObjectId
          schema:
            type: string
          description: Curation ID
      requestBody:
        description: An updated curation json object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/Sample-Curation'
      responses:
        '200':
          description: Returns the newly curated object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample-Curation'

        '304': 
          description: No changes to the curation object to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'No changes'
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'

        '404':
          description: Curation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Curated sample ID 583e3d6ae74a1d205f4e3fd3 not found

        '500':
          description: Elastic search upstream server response error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
    delete:

      security:
        - BearerAuth: []
      summary: Deletes a curation or list of curations
      description: A route to delete a  single curation or list of curations with similar datasetID
      tags:
        - Curation
      parameters:
        - in: query
          name: xlsxObjectId
          schema:
            type: string
          description: the id of the curation to delete
        - in: query
          name: dataset
          schema:
            type: string
          description: Dataset ID linked to multiple curations

      responses:
        '200':
          description: Returns a success message for deleting curations
          content:
            application/json:
              schema:

                type: object
                properties:
                  message:

                    type: string
                    enum: ['Curated sample ID: 6475c82ffbeb8571b77a5991 successfully deleted', 'Curated Samples with Dataset ID: 583e3d6ae74a1d205f4e3fd3 successfully deleted']
                
        '400':
          description: Bad user input
          content:
            application/json:
              schema:
                type: object
                example: 
                  success: false
                  message: validation error
                  data:
                    - value: '231543536'
                      msg: invalid xlsx object id
                      param: dataset
                      location: query
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '404':
          description: Curation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                      message:
                        type: string
                        enum: ['Curation sample not found', '`Dataset ID: 583e3d6ae74a1d205f4e3fd3 not found`']
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
  
  /curate/get:
    get:
      security:
        - BearerAuth: []
      summary: Gets a single curated data or list of curated data
      description: A route to get a single curation or list of curations depending on if query parameter for the curation to get is set.
      tags:
        - Curation
      parameters:
        - name: xlsxObjectId
          in: query
          description: The ID of the curated data to return for editing
          schema:
            type: string
        - name: xmlId
          in: query
          description: Alternatively the ID of the xml to return for editing
          schema:
            type: string
      responses:
        '200':
          description: Returns the newly curated object
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Sample-Curation'

        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
        '404':
          description: Curation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                      message:
                        type: string
                        enum: ['Curation sample not found', 'Sample xml not found']
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
  
  /curate/bulk:
     post:
      security:
        - BearerAuth: [] 
      summary: Creates bulk curations
      description: Creates multiple curations that are uploaded puts in separates folders uploaded in a zip file
      tags:
        - Curation
      parameters:
        - in: query
          name: dataset
          schema:
            type: string
          description: Dataset ID
      requestBody:
        description: A payload that contains zip file which holds all the files for separate curations in individual folders
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uploadfile:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Returns the newly curated object
          content:
            application/json:
              schema:
                type: object
                properties:
                  bulkCurations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Successful-Curation'
                  bulkErrors:
                    example:
                      - "flename": "mm_files/bulk-curation-1688984487096/master_template (1).xlsx"
                        "real_permittivity.csv": "file not uploaded"
                        "loss_permittivity.csv": "file not uploaded"
                        "tan_delta.csv": "file not uploaded"
                        "weibull.csv": "file not uploaded"
                        
        '400':
          description: If user doesn't upload master template xlsx file
          content:
            application/json:
              schema:
                type: object
                properties:
                      message:
                        type: string
                        enum: ['Missing dataset ID in query', 'bulk curation zip file not uploaded']

        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
  
        '404':
          description: Dataset not found
          content: 
            application/json: 
              schema:
                type: object
                example:
                  message: "Dataset ID: 583e3d6ae74a1d205f4e3fd3 not found"

        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: An error occurred
                    
  /files/{fileId}:
    get:
      summary: Download files from the server
      description: A route to download files by specifying a boolean isDirectory query params for files saved in the directory on the server or  in database
      tags:
        - Files
      parameters:
        - in: query
          name: isDirectory
          schema:
            type: string
            example: true
          description: a boolean value to specify if the file is stored in a directory or database
        - in: path
          required: true
          name: fileId
          description: the id of the file to download
          schema:
            type: string
            example: 'mobile (15).png'
      responses:
        '200':
          description: Returns the downloaded file type
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

        '400':
          description: Bad user input
          content:
            application/json:
              schema:
                type: object
                example: 
                  success: false
                  message: validation error
                  data:
                    - value: trued
                      msg: only boolean value allowed
                      param: isDirectory
                      location: query
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error fetching file'
                    
    delete:
      security:
        - BearerAuth: []
      summary: Deletes a file from the server
      description: A route to delete a file by passing the fileId path params
      tags:
        - Files
      parameters:
        - in: path
          required: true
          name: fileId
          description: the id of the file to delete
          schema:
            type: string
            example: 'mobile (15).png'
      responses:
        '200':
          description: OK

        '400':
          description: Bad user input
          content:
            application/json:
              schema:
                type: object
                example: 
                  success: false
                  message: validation error
                  data:
                    - value: 'mobile (15).pnge'
                      msg: Unsupported filetype
                      param: fileId
                      location: params
                      
        '401':
          description: User not authorized for this service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized-Error'
  
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error deleting files'
                    
  /files/image_migration/{imageType}:
    get:
      summary: Image migration routes
      description: A route to fetch images of specific types only
      tags:
        - Files
      parameters:
        - in: path
          required: true
          name: imageType
          description: the type of images to fetch
          schema:
            type: string
            example: 'tiff'
      responses:
        '200':
          description: Returns the fetched image information
          content:
            application/json:
              schema:
                type: object
                example: 
                  images: 
                    - fieldname: 'uploadfile'
                      originalname: '001.tif'
                      encoding: '7bit'
                      mimetype: 'image/tiff'
                      destination: 'mm_files'
                      filename: 'exciting_spoonbill_ermentrude-2023-05-05T11:25:53.451Z-001.tif'
                      path: 'mm_files/exciting_spoonbill_ermentrude-2023-05-05T11:25:53.451Z-001.tif'
                      size: 101196

        '400':
          description: Bad user input
          content:
            application/json:
              schema:
                type: object
                example: 
                  success: false
                  message: validation error
                  data:
                    - value: png
                      msg: only supports tiff & tif migration
                      param: imageType
                      location: params
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error fetching file'
              
  /files/upload:
    post:
      summary: upload files to the server
      description: A route to upload files to the server
      tags:
        - Files
      requestBody:
        description: An array selection of files to upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uploadfile:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Returns the downloaded file type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample-Files'

        '400':
          description: User uploads unsupported files
          content:
            application/json:
              schema:
                type: object
                properties:
                      message:
                        type: string
                        example: 'Only .png, .jpg, .jpeg, .tiff, .tif, .csv, .zip, .xls and .xlsx format allowed!'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error uploading files
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Unauthorized-Error: 
      type: object
      properties:
        message:
          type: string
          example: Not authenticated
    Forbidden-Error: 
      type: object
      properties:
        message:
          type: string
          example: User is forbidden
    Missing-Input-Error: 
      type: object
      properties:
        message:
          type: string
          example: Category type or doc is missing
          
    Successful-Curation:
      type: object
      example: 
        xml: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <PolymerNanocomposite>\n  <ID>S10</ID>\n  <Control_ID>S28</Control_ID>\n  <DATA_SOURCE>\n    <Citation>\n      <CommonFields>\n        <YourName>John Smith</YourName>\n        <YourEmail>jonsmith@nomail.org</YourEmail>\n        <Origin>experiments</Origin>\n        <CitationType>lab-generated</CitationType>\n        <Author>Aditya Shanker Prasad</Author>\n        <Author>John Doe</Author>\n        <URL>https://search.proquest.com/openview/eb63d4d6b84b1252971b3e3eec53b97c/1?pq-origsite=gscholar&cbl=51922&diss=y</URL>\n        <Location>Rensselaer Polytechnic Institute</Location>\n      </CommonFields>\n    </Citation>\n  </DATA_SOURCE>\n   </PolymerNanocomposite>\n"
        user:
          _id: "643931cc6f44b02f01380f7a"
          displayName: "Test"
        groupId: "583e3d6ae74a1d205f4e3fd3"
        sampleID: "64394c8032bc6325505af6f9"
        isApproved: false,
        status: "Editing"
        
    Sample-Curation:
      type: object
      example: 
        data origin:
          YourName: Akash Prasad
          YourEmail: akash@prasad.com
          ID: S10
          Control_ID: S28
          Origin: experiments
          Citation Type: lab-generated
          Author: Aditya Shanker Prasad
          URL: https://search.proquest.com/openview/eb63d4d6b84b1252971b3e3eec53b97c/1?pq-origsite=gscholar&cbl=51922&diss=y
          Location: Rensselaer Polytechnic Institute
          
    Sample-Files:
      type: object
      example:
        files: 
          - fieldname: 'uploadfile'
            originalname: '001.tif'
            encoding: '7bit'
            mimetype: 'image/tiff'
            destination: 'mm_files'
            filename: 'exciting_spoonbill_ermentrude-2023-05-05T11:25:53.451Z-001.tif'
            path: 'mm_files/exciting_spoonbill_ermentrude-2023-05-05T11:25:53.451Z-001.tif'
            size: 101196
          - fieldname: 'uploadfile'
            originalname: 'master-template.xlsx'
            encoding: '7bit'
            mimetype: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
            destination: 'mm_files'
            filename: 'educational_hornet_maisie-2023-04-18T16:01:27.609Z-master-template.xlsx'
            path: 'mm_files/educational_hornet_maisie-2023-04-18T16:01:27.609Z-master-template.xlsx'
            size: 104928