import createWrapper from '../../../jest/script/wrapper'
import { enableAutoDestroy } from '@vue/test-utils'
import umap from '@/components/metamine/visualizationNU/umap.vue'
import store from '@/store/index.js'

// Somewhere in your test case or test suite

const storeSpy = jest.spyOn(store, 'dispatch')
const initialCreateSvgSpy = jest.spyOn(umap.methods, 'createSvg').mockImplementationOnce(() => {})
const initialUpdateSpy = jest.spyOn(umap.methods, 'update').mockImplementation(() => {})
global.fetch = jest.fn()
  .mockImplementationOnce(() => Promise.resolve({ json: () => Promise.resolve(mockValues) }))
  .mockImplementationOnce(() => Promise.resolve({ json: () => Promise.resolve(mockValues2) }))
  .mockImplementationOnce(() => Promise.resolve({ json: () => Promise.resolve(mockValues2) }))

describe('structure', () => {
  let wrapper
  beforeEach(async () => {
    wrapper = await createWrapper(umap, {}, false)
  })

  enableAutoDestroy(afterEach)
  afterEach(async () => {
    wrapper.destroy()
    await jest.resetAllMocks()
  })

  it('mounts properly ', () => {
    expect(wrapper.exists()).toBe(true)
    expect(wrapper.findComponent({ ref: 'umapPlot' }).exists()).toBe(true)
    expect(fetch).toHaveBeenCalledTimes(3)

    // check initial fetch request
    expect(fetch).toHaveBeenNthCalledWith(1, '/api/files/metamine')

    expect(storeSpy).toHaveBeenCalledTimes(2)
    expect(storeSpy).toHaveBeenNthCalledWith(1, 'metamineNU/setPage', 'umap', { root: true })
    expect(storeSpy).toHaveBeenNthCalledWith(2, 'metamineNU/setFetchedNames', mockValues.fetchedNames, { root: true })

    for (let i = 0; i < mockValues.fetchedNames.length; i++) {
      // check fetch request after initial fetch request to equal response array length
      expect(fetch).toHaveBeenNthCalledWith(i + 2, `/api/files/metamine/${mockValues.fetchedNames[i].name}`)
    }
    expect(initialUpdateSpy).toHaveBeenCalled()
    expect(initialCreateSvgSpy).toHaveBeenCalledTimes(1)
  })
})

const mockValues = {
  fetchedNames: [
    {
      key: 0,
      bucket_name: 'metamine',
      name: 'lattice_2d_sample.csv.csv',
      color: '#FFB347'
    },
    {
      key: 1,
      bucket_name: 'metamine',
      name: 'freeform_2d_sample.csv.csv',
      color: '#8A8BD0'
    }
  ]
}

const mockValues2 = {
  fetchedData: [
    {
      field1: '0',
      symmetry: 'C2v',
      unit_cell_x_pixels: '50',
      unit_cell_y_pixels: '50',
      geometry_full
      condition: 'Plane Strain',
      C11: '90623239.99',
      C12: '2093444.168',
      C22: '90623239.99',
      C16: '0',
      C26: '0',
      C66: '88309.93157',
      CM0_E: '1.00E-09',
      'CM0_nu\t': '',
      CM1_E: '2240000000',
      CM1_nu: '0.49253731',
      youngs: '[90574880.33650465 89842899.57835576 87626117.20248799 83865234.01354808\n 78473858.03428507 71363376.30564871 62490687.96584841 51940886.46613767\n 40052794.89630961 27572194.13238318 15762794.27006275  6333722.92458005\n  1044019.62898206  1044019.62898206  6333722.92458008 15762794.27006275\n 27572194.13238318 40052794.89630964 51940886.4661377  62490687.96584844\n 71363376.30564868 78473858.03428504 83865234.01354808 87626117.20248798\n 89842899.57835576 90574880.33650465 89842899.57835573 87626117.20248781\n 83865234.0135479  78473858.03428486 71363376.30564846 62490687.96584817\n 51940886.46613741 40052794.89630937 27572194.13238295 15762794.27006265\n  6333722.92458002  1044019.62898205  1044019.62898206  6333722.92458006\n 15762794.27006262 27572194.13238299 40052794.89630942 51940886.46613746\n 62490687.96584821 71363376.30564854 78473858.03428489 83865234.01354791\n 87626117.20248789 89842899.57835571 90574880.33650465 89842899.57835576\n 87626117.20248796 83865234.01354803 78473858.03428507 71363376.30564865\n 62490687.96584835 51940886.46613767 40052794.89630961 27572194.13238313\n 15762794.27006271  6333722.92458001  1044019.62898206  1044019.62898207\n  6333722.92458009 15762794.27006274 27572194.13238325 40052794.8963096\n 51940886.46613779 62490687.96584845 71363376.30564868 78473858.03428508\n 83865234.01354808 87626117.20248798 89842899.57835576 90574880.33650465\n 89842899.57835573 87626117.20248787 83865234.0135479  78473858.03428486\n 71363376.3056485  62490687.96584812 51940886.46613745 40052794.89630929\n 27572194.132383   15762794.27006251  6333722.92457996  1044019.62898206\n  1044019.62898209  6333722.92458004 15762794.27006272 27572194.13238307\n 40052794.89630938 51940886.46613754 62490687.96584819 71363376.30564858\n 78473858.03428492 83865234.01354791 87626117.20248789 89842899.57835571\n 90574880.33650465]',
      poisson: '[0.02310052 0.03099533 0.05490454 0.09546772 0.15361665 0.23030707\n 0.32600385 0.43978921 0.56800876 0.70261885 0.82998967 0.93168734\n 0.98873968 0.98873968 0.93168734 0.82998967 0.70261885 0.56800876\n 0.43978921 0.32600385 0.23030707 0.15361665 0.09546772 0.05490454\n 0.03099533 0.02310052 0.03099533 0.05490454 0.09546772 0.15361665\n 0.23030707 0.32600385 0.43978921 0.56800876 0.70261885 0.82998967\n 0.93168734 0.98873968 0.98873968 0.93168734 0.82998967 0.70261885\n 0.56800876 0.43978921 0.32600385 0.23030707 0.15361665 0.09546772\n 0.05490454 0.03099533 0.02310052 0.03099533 0.05490454 0.09546772\n 0.15361665 0.23030707 0.32600385 0.43978921 0.56800876 0.70261885\n 0.82998967 0.93168734 0.98873968 0.98873968 0.93168734 0.82998967\n 0.70261885 0.56800876 0.43978921 0.32600385 0.23030707 0.15361665\n 0.09546772 0.05490454 0.03099533 0.02310052 0.03099533 0.05490454\n 0.09546772 0.15361665 0.23030707 0.32600385 0.43978921 0.56800876\n 0.70261885 0.82998967 0.93168734 0.98873968 0.98873968 0.93168734\n 0.82998967 0.70261885 0.56800876 0.43978921 0.32600385 0.23030707\n 0.15361665 0.09546772 0.05490454 0.03099533 0.02310052]'
    },
    {
      field1: '101',
      symmetry: 'C2v',
      unit_cell_x_pixels: '50',
      unit_cell_y_pixels: '50',
      geometry_full
      condition: 'Plane Strain',
      C11: '2957458810',
      C12: '1456658807',
      C22: '2957458810',
      C16: '0',
      C26: '0',
      C66: '750400001.7',
      CM0_E: '1.00E-09',
      'CM0_nu\t': '',
      CM1_E: '2240000000',
      CM1_nu: '0.49253731',
      youngs: '[2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09\n 2.24e+09 2.24e+09 2.24e+09 2.24e+09 2.24e+09]',
      poisson: '[0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731\n 0.49253731 0.49253731 0.49253731 0.49253731 0.49253731]'
    }
  ]
}
