version: '3'
services:
  mongo:
    image: 'mongo:4.4'
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MM_MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MM_MONGO_PWD}
      - MONGO_DEVS=${MONGO_DEVS}
      - MONGO_DEV_PWD=${MONGO_DEV_PWD}
      - MM_DB=${MM_DB}
    ports:
      - '27017:27017'
    volumes:
      - ./mockDB/db:/data/db
      - ./mockDB/restore:/restore
      - ./mockDB/log:/var/log/mongodb
      - ./mockDB/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
  proxy:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '80:80'
  api:
    depends_on:
      - mongo
    build:
      dockerfile: Dockerfile.dev
      context: ./resfulservice
    volumes:
      - /app/node_modules
      - ./resfulservice:/app
    environment:
      - DB_USERNAME=${MONGO_DEVS}
      - DB_PASSWORD=${MONGO_DEV_PWD}
      - MM_DB=${MM_DB}
  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile.dev
      context: ./app
    volumes:
      - /app/node_modules
      - ./app:/app
  redis:
    image: "redis:alpine"
    command: redis-server
    volumes:
     - ./redis-data:/var/lib/redis
    ports:
      - '6379:6379'
  celery:
    depends_on:
      - redis
      - fuseki
    command: celery -A wsgi.celery worker -l INFO -c 4 --uid=nobody --gid=nogroup
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: .
      dockerfile: whyis/Dockerfile
    volumes:
      - ./whyis/materialsmine:/app
  celerybeat:
    depends_on:
      - redis
      - fuseki
    command: celery -A wsgi.celery beat -l INFO --uid=nobody --gid=nogroup
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: .
      dockerfile: whyis/Dockerfile
    volumes:
      - ./whyis/materialsmine:/app
  fuseki:
    command: fuseki-server --mem /ds
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: .
      dockerfile: whyis/Dockerfile
    volumes:
      - ./whyis/materialsmine:/app
  whyis:
    depends_on:
      - redis
      - fuseki
    stdin_open: true
    command: gunicorn wsgi:application --workers ${WEB_CONCURRENCY:-4} --timeout 90
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: .
      dockerfile: whyis/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - ./whyis/materialsmine:/app
volumes:
  mockDB:
