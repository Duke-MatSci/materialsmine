import logging
from datetime import datetime, timedelta

from whyis.authenticator import JWTAuthenticator
import os

authenticator_config = [] # set into config dict later
authenticator_secret = os.environ.get('NM_GRAPH_AUTH_SECRET', None)
if authenticator_secret:
    print("Adding JWT authenticator")
    authenticator_config.append(JWTAuthenticator(key=authenticator_secret))

APPLICATION_ROOT= '/whyis/'

AUTHENTICATORS = authenticator_config

# LOGGING
LOGGER_NAME = "whyis_log"
LOG_FILENAME = "/var/log/whyis/output-whyis-%s.log" % (str(datetime.now()).replace(' ','_'))
LOG_LEVEL = logging.INFO
LOG_FORMAT = "%(asctime)s %(levelname)s\t: %(message)s" # used by logging.Formatter

PERMANENT_SESSION_LIFETIME = timedelta(days=7)
# EMAIL CONFIGURATION
## MAIL_SERVER = "smtp.mailgun.org"
## MAIL_PORT = 587
## MAIL_USE_TLS = True
## MAIL_USE_SSL = False
## MAIL_DEBUG = False
## MAIL_USERNAME = ''
## MAIL_PASSWORD = ''
## DEFAULT_MAIL_SENDER = "Whyis Admin <admin@whyis.example.com>"
EMBEDDED_FUSEKI = False
ADMIN_ENDPOINT = 'http://fuseki:3030/admin'

KNOWLEDGE_ENDPOINT = 'http://fuseki:3030/knowledge'

db_user = os.environ.get('SPARQL_USER', None)
db_pw = os.environ.get('SPARQL_PASSWORD', None)
if db_user is not None:
    ADMIN_USERNAME = db_user
    KNOWLEDGE_USERNAME = db_user
    ADMIN_PASSWORD = db_pw
    KNOWLEDGE_PASSWORD = db_pw

EMBEDDED_CELERY = False
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'

NANOPUB_ARCHIVE = {
    'depot.storage_path' : "run/nanopublications",
}
FILE_ARCHIVE = {
    'cache_max_age' : 3600*24*7,
    'depot.storage_path' : 'run/files'
}
CACHE_TYPE = "redis" # Flask-Caching related configs
CACHE_KEY_PREFIX = 'whyis_cache_'
CACHE_REDIS_URL = 'redis://redis:6379/0'
CACHE_DEFAULT_TIMEOUT = 0
MULTIUSER = True
